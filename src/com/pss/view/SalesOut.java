/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pss.view;

import com.pss.dao.ClientDao;
import com.pss.dao.ClientImpl;
import com.pss.dao.ProductDao;
import com.pss.dao.ProductImpl;
import com.pss.dao.SaleDao;
import com.pss.dao.SaleImpl;
import com.pss.po.Client;
import com.pss.po.Product;
import com.pss.po.Sale;
import com.pss.util.LocationUtil;
import com.pss.util.StringUtile;
import com.pss.util.UUIDUtils;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class SalesOut extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJInternalFrame8
     */
    public SalesOut() {
        initComponents();
        LocationUtil.setFullScreen(this);  //设置全屏显示
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClient = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("销售出库");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商品名称", "商品类型", "安全存量", "当前库存", "建议销售价"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("查询");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "客户编号", "客户姓名", "销售价格", "销售数量"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblClient);

        jLabel2.setText("加入销售");

        btnAdd.setText("销售");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(598, 735, Short.MAX_VALUE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        //商品表
        DefaultTableModel tm = (DefaultTableModel) tblProduct.getModel();
        //获取当前行
        int row = this.tblProduct.getSelectedRow();
        String goods = tm.getValueAt(row, 0).toString().trim();
        ClientDao sDao = new ClientImpl();
        List<Client> list = sDao.QueryClient("");

        if (list != null) {//设置采购按钮是否禁用
            btnAdd.setEnabled(true);
        } else {
            btnAdd.setEnabled(false);
        }
        DefaultTableModel tms = (DefaultTableModel) tblClient.getModel();
        //tblClient.removeAll();
        while (tms.getRowCount() > 0) {
            tms.removeRow(tm.getRowCount() - 1);//逐行清除表中内容
        }
        for (Client s : list) {
            String[] str = {String.valueOf(s.getcId()), s.getcName(),tm.getValueAt(tblProduct.getSelectedRow(), 4).toString().trim(), ""};
            tms.addRow(str);
        }
    }//GEN-LAST:event_tblProductMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // 搜索
        String value = this.txtSearch.getText();
        ProductDao pDao = new ProductImpl();
        List<Product> list = pDao.QueryProductByValue(value);

        DefaultTableModel tm = (DefaultTableModel) tblProduct.getModel();
        while (tm.getRowCount() > 0) {
            tm.removeRow(tm.getRowCount() - 1);//逐行清除表中内容
        }
        // JTable tb = new JTable(tm);
        // DefaultTableCellRenderer bColor = new DefaultTableCellRenderer();   //该类可改变单元格的背景，字体等。
        // bColor.setBackground(Color.red);
        // int i = 0;
        for (Product p : list) {
            String[] str = {p.getpName(), p.getType(), String.valueOf(p.getSafeStock()), String.valueOf(p.getNowStock()), String.valueOf(p.getSuggestBuy())};
            tm.addRow(str);
            //            if (p.getSafeStock() >= p.getNowStock()) {
                //                //商品存量不足，该行标红色
                //                tb.getCellEditor(i++, 1).getTableCellEditorComponent(tb, value, isSelected, ERROR, WIDTH).setBackground(Color.red);
                //            }

        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientMouseClicked
        //供应商表
    }//GEN-LAST:event_tblClientMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // 采购
        // List<String[]> list = new ArrayList<>();
        DefaultTableModel tm = (DefaultTableModel) tblClient.getModel();
        String sPrice=tblClient.getValueAt(tblClient.getSelectedRow(),2).toString().trim();
        String sNumber=tblClient.getValueAt(tblClient.getSelectedRow(),3).toString().trim();


        if (!StringUtile.validateNull(sNumber)) {
            JOptionPane.showMessageDialog(this, "销售数量不允许为空！");
            return;
        }
        if (!StringUtile.validateDigit(sNumber)) {
            JOptionPane.showMessageDialog(this, "销售数量必须为数字！");
            return;
        }
         Double price=Double.valueOf(sPrice);    
         int number=Integer.valueOf(sNumber);     
         JOptionPane.showMessageDialog(this, "销售数量："+number);
        Sale s=new Sale();
        s.setSaleNo(UUIDUtils.getUUID());
        s.setcId(tblClient.getValueAt(tblClient.getSelectedRow(),2).toString().trim());
        ProductDao pDao = new ProductImpl();
        String sName=tblProduct.getValueAt(tblProduct.getSelectedRow(),0).toString().trim();
        for (Product p : pDao.QueryProductByName(sName)) {
            s.setpNo(p.getpNo());//商品编号
        }
        
        SaleDao bDao = new SaleImpl();
        if (bDao.AddSale(s) > 0) {
            int ret=pDao.UpdateProductStockPlus(s.getpNo(),number);   //在这里入库
            JOptionPane.showMessageDialog(this, "销售成功！");
            //btnSearchActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(this, "销售失败！");
        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblClient;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
