/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pss.view;

import com.pss.dao.ProductDao;
import com.pss.dao.ProductImpl;
import com.pss.po.Product;
import com.pss.util.LocationUtil;
import com.pss.util.StringUtile;
import com.pss.util.UUIDUtils;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class CommodityInformationManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJInternalFrame
     */
    public CommodityInformationManagement() {
        initComponents();
        LocationUtil.setFullScreen(this);  //设置全屏显示
        this.btnUpdate.setEnabled(false);
        this.btnDel.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnProName = new javax.swing.JLabel();
        btnSafe = new javax.swing.JLabel();
        btnPurchase = new javax.swing.JLabel();
        btnSale = new javax.swing.JLabel();
        txtProName = new javax.swing.JTextField();
        txtSafe = new javax.swing.JTextField();
        txtPurchase = new javax.swing.JTextField();
        txtSale = new javax.swing.JTextField();
        btnType = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("商品资料管理");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "编号", "产品名称", "安全存量", "商品类型", "建议购买价", "建议销售价", "当前数量", "最后进货日期", "最后送货日期"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblProductAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        btnProName.setText("产品名称");

        btnSafe.setText("安全存量");

        btnPurchase.setText("建议购买价");

        btnSale.setText("建议销售价");

        btnType.setText("商品类型");

        btnAdd.setText("增加 ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDel.setText("删除");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnUpdate.setText("更新");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearch.setText("查询");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnCancel.setText("取消");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnType)
                            .addComponent(btnSafe)
                            .addComponent(btnProName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProName, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(txtSafe)
                            .addComponent(txtType)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(52, 52, 52)
                        .addComponent(btnDel)
                        .addGap(66, 66, 66)
                        .addComponent(btnUpdate)
                        .addGap(51, 51, 51)
                        .addComponent(btnSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPurchase)
                            .addComponent(btnSale))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(txtSale)))
                    .addComponent(btnCancel))
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProName)
                    .addComponent(btnPurchase)
                    .addComponent(txtProName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSafe)
                    .addComponent(btnSale)
                    .addComponent(txtSafe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnType)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDel)
                    .addComponent(btnUpdate)
                    .addComponent(btnSearch)
                    .addComponent(btnCancel))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        StringUtile su = new StringUtile();
        if (!su.validateNull(this.txtProName.getText())) {
            JOptionPane.showMessageDialog(this, "商品名称不允许为空！");
            return;
        }
        if (!su.validateNull(this.txtType.getText())) {
            JOptionPane.showMessageDialog(this, "商品类型不允许为空！");
            return;
        }

        if (!su.validateDigit(this.txtSafe.getText())) {
            JOptionPane.showMessageDialog(this, "商品安全存量不允许为空！");
            return;
        }
        if (!su.validateDigit(this.txtPurchase.getText())) {
            JOptionPane.showMessageDialog(this, "商品建议购买价格必须为数字！");
            return;
        }
        if (!su.validateDigit(this.txtSale.getText())) {
            JOptionPane.showMessageDialog(this, "商品建议销售价格必须为数字！");
            return;
        }
        UUIDUtils uuid = new UUIDUtils();
        Product p = new Product();
        p.setpNo(uuid.getUUID());
        p.setpName(this.txtProName.getText().trim());//trim()去除前后空格
        p.setSafeStock(Integer.valueOf(this.txtSafe.getText().trim()));
        p.setType(this.txtType.getText().trim());
        p.setSuggestBuy(Double.valueOf(this.txtPurchase.getText().trim()));
        p.setSuggestSell(Double.valueOf(this.txtSale.getText().trim()));
        ProductDao pl = new ProductImpl();

        if (pl.IsExist(p.getpName())) {
            if (pl.UpdateProduct(p) > 0) {
                JOptionPane.showMessageDialog(this, "同名同类商品已存在，该商品库存已更新！");
                btnSearchActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "同名同类商品已存在，该商品库存更新失败！");
            }
            btnCancelActionPerformed(evt);
            return;
        }
        int result = pl.AddProduct(p);
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "添加成功");
            btnSearchActionPerformed(evt);
            btnCancelActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(this, "添加失败");
            btnCancelActionPerformed(evt);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        ProductDao pl = new ProductImpl();
        List<Product> list = pl.QueryProduct();

        if (!list.isEmpty()) {
            this.btnUpdate.setEnabled(true);
            this.btnDel.setEnabled(true);
        }
        DefaultTableModel tm = (DefaultTableModel) tblProduct.getModel();
        while (tm.getRowCount() > 0) {
            tm.removeRow(tm.getRowCount() - 1);//逐行清除表中内容
        }

        for (Product p : list) {
            String lb = p.getLastBuyTime() == null ? "" : String.valueOf(p.getLastBuyTime());
            String ld = p.getLastDeliverTime() == null ? "" : String.valueOf(p.getLastDeliverTime());

            String[] str = {p.getpNo(),p.getpName(), String.valueOf(p.getSafeStock()), p.getType(), String.valueOf(p.getSuggestBuy()), String.valueOf(p.getSuggestSell()), String.valueOf(p.getNowStock()),lb,ld};
            tm.addRow(str);
        }
         

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.txtProName.setText("");
        this.txtSafe.setText("");
        this.txtType.setText("");
        this.txtPurchase.setText("");
        this.txtSale.setText("");
        this.btnAdd.setEnabled(true);
        this.btnUpdate.setEnabled(false);
        this.btnDel.setEnabled(false);
        this.txtProName.setEditable(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        ProductDao pl = new ProductImpl();
        int result = pl.DeleteProduct(this.txtProName.getText().trim());
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "删除成功");
            btnSearchActionPerformed(evt);
            btnCancelActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(this, "删除失败");
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        StringUtile su = new StringUtile();
        if (!su.validateNull(this.txtProName.getText())) {
            JOptionPane.showMessageDialog(this, "商品名称不允许为空！");
            return;
        }
        if (!su.validateNull(this.txtSafe.getText())) {
            JOptionPane.showMessageDialog(this, "商品安全库存不允许为空！");
            return;
        }
        if (!su.validateNull(this.txtType.getText())) {
            JOptionPane.showMessageDialog(this, "商品类型不允许为空！");
            return;
        }
        if (!su.validateDigit(this.txtPurchase.getText())) {
            JOptionPane.showMessageDialog(this, "商品建议购买价格必须为数字！");
            return;
        }
        if (!su.validateDigit(this.txtSale.getText())) {
            JOptionPane.showMessageDialog(this, "商品建议销售价格必须为数字！");
            return;
        }
        Product p = new Product();
        p.setpName(this.txtProName.getText().trim());
        p.setSafeStock(Integer.valueOf(this.txtSafe.getText().trim()));//trim()去除前后空格
        p.setType(this.txtType.getText().trim());
        p.setSuggestBuy(Double.valueOf(this.txtPurchase.getText().trim()));
        p.setSuggestSell(Double.valueOf(this.txtSale.getText().trim()));
        ProductDao pl = new ProductImpl();
        int result = pl.UpdateProduct(p);
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "更新成功");
            btnSearchActionPerformed(evt);
            btnCancelActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(this, "更新失败");
            btnCancelActionPerformed(evt);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblProductAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblProductAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblProductAncestorAdded

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) tblProduct.getModel();
        //获取当前行
        int row = this.tblProduct.getSelectedRow();
        this.txtProName.setText(tm.getValueAt(row, 1).toString());
        this.txtSafe.setText(tm.getValueAt(row, 2).toString());
        this.txtType.setText(tm.getValueAt(row, 3).toString());
        this.txtPurchase.setText(tm.getValueAt(row, 4).toString());
        this.txtSale.setText(tm.getValueAt(row, 5).toString());
        this.btnAdd.setEnabled(false);
        this.btnUpdate.setEnabled(true);
        this.btnDel.setEnabled(true);
        this.txtProName.setEditable(false);
    }//GEN-LAST:event_tblProductMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JLabel btnProName;
    private javax.swing.JLabel btnPurchase;
    private javax.swing.JLabel btnSafe;
    private javax.swing.JLabel btnSale;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel btnType;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtProName;
    private javax.swing.JTextField txtPurchase;
    private javax.swing.JTextField txtSafe;
    private javax.swing.JTextField txtSale;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
